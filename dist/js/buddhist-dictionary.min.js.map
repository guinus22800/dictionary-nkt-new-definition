{"version":3,"sources":["index.js","data-store.js","process-data.js","utils.js","mark.min.js"],"names":["globalVariables","$","document","ready","utils","fetchJSONFile","dictionaryConfig","pathToJson","data","dataStore","srcData","entries","processData","showResults","buttonLetter","searchByLetterClass","find","buttonAll","buttonAllClass","click","removeClass","searchInputTargetClass","value","filteredData","filterByFirstLetter","event","target","text","addClass","keyup","debounce","window","scrollTo","query","filterDataByString","length","highlightStringMin","highlightSearchQuery","context","getElementById","Mark","mark","highlightingOptions","searchDebounce","gc","itemTemplate","obj","title","keyAliases","id","split","join","itemTitleTagType","itemTitleClass","titleMarkup","defs","definitions","i","def","processDefinition","links","x","itemDefinitionTagType","itemDefinitionClass","definitionDividerClass","definitonsMarkup","definition","linkStart","linkEnd","undefined","highlightCharacterMin","j","toUpperCase","indexOf","link","currentLink","linkMatch","htmlString","itemLinkClass","replace","array","testQuery","searchDefinitions","checked","filter","testArray","key","y","push","run","z","callback","searchListTargetClass","empty","template","append","Anchors","getElementsByTagName","addEventListener","t","hash","preventDefault","location","element","substring","getCoords","top","queryUpperCase","elem","box","getBoundingClientRect","body","docEl","documentElement","scrollTop","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","left","Math","round","path","httpRequest","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","open","send","flattenArray","recurse","cur","prop","Object","result","Array","isArray","l","isEmpty","p","searchArray","name","func","wait","scope","timeout","this","args","arguments","clearTimeout","setTimeout","apply","throttle","fn","threshold","last","deferTimer","now","Date","e","exports","module","define","amd","Symbol","iterator","constructor","prototype","TypeError","n","r","enumerable","configurable","writable","defineProperty","assign","hasOwnProperty","call","o","ctx","iframes","exclude","iframesTimeout","NodeList","isPrototypeOf","slice","querySelectorAll","forEach","contains","contentWindow","Error","getAttribute","trim","href","a","isIframeBlank","removeEventListener","getIframeContents","observeIframeLoad","forEachIframe","waitForIframes","querySelector","s","c","u","matches","onIframeReady","createNodeIterator","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","DOCUMENT_POSITION_FOLLOWING","previousNode","prevNode","node","nextNode","val","handled","compareNodeIframe","createInstanceOnIframe","forEachNode","createIterator","h","getIteratorNode","checkIframeFilter","handleOpenIframes","getContexts","iterateThroughNodes","matchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","webkitMatchesSelector","every","ie","navigator","userAgent","opt","log","debug","wildcards","setupWildcardsRegExp","escapeStr","keys","synonyms","createSynonymsRegExp","ignoreJoiners","ignorePunctuation","setupIgnoreJoinersRegExp","diacritics","createDiacriticsRegExp","createMergedBlanksRegExp","createJoinersRegExp","createWildcardsRegExp","createAccuracyRegExp","caseSensitive","RegExp","processSynomyms","charAt","test","accuracy","limiters","separateWordSearch","keywords","sort","Number","parseFloat","toString","noMatch","start","callNoMatchOnInvalidRanges","end","valid","parseInt","isNumeric","stringify","NodeFilter","SHOW_TEXT","textContent","matchesExclude","parentNode","FILTER_REJECT","FILTER_ACCEPT","nodes","concat","splitText","createElement","setAttribute","className","replaceChild","substr","f","wrapRangeInTextNode","previousSibling","getTextNodes","exec","index","lastIndex","wrapRangeInMappedTextNode","checkWhitespaceRanges","createDocumentFragment","firstChild","appendChild","removeChild","normalizeTextNode","normalize","nodeType","nextSibling","nodeValue","acrossElements","ignoreGroups","each","done","getSeparatedKeywords","createRegExp","checkRanges","wrapRangeFromIndex","SHOW_ELEMENT","unwrapMatches","set","_opt","console","get","markRegExp","markRanges","unmark"],"mappings":"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","file":"buddhist-dictionary.min.js","sourcesContent":["var globalVariables = {}\n\n$(document).ready(function () {\n  \n  // Get the data and set to 'data' variable\n  utils.fetchJSONFile(dictionaryConfig.pathToJson, function (data) {\n    dataStore.srcData = data.entries\n    processData.showResults(dataStore.srcData);\n  });\n\n  var buttonLetter = $('.' + dictionaryConfig.searchByLetterClass ).find(\"a\")\n  var buttonAll = $('.' + dictionaryConfig.buttonAllClass);\n  \n  buttonLetter.click(function() {\n    buttonLetter.removeClass('s-is-active');\n    $('.' + dictionaryConfig.searchInputTargetClass)[0].value = '';\n    dataStore.filteredData = processData.filterByFirstLetter(dataStore.srcData,$(event.target).text())\n    if ($(event.target).text() === \"ALL\") {\n      processData.showResults(dataStore.srcData,$(event.target).text());\n    } else {\n      processData.showResults(dataStore.filteredData,$(event.target).text());\n    }\n\n    $(event.target).addClass('s-is-active');\n  });\n\n  // Listen to keyup events on the search input and run relevent function\n  $('.' + dictionaryConfig.searchInputTargetClass).keyup(utils.debounce(function (event) {\n    buttonLetter.removeClass('s-is-active');\n    buttonAll.addClass('s-is-active');\n    window.scrollTo(0, 0);\n    var query = event.target.value\n    dataStore.filteredData = processData.filterDataByString(dataStore.srcData, query);\n    processData.showResults(dataStore.filteredData, query)\n    \n    if ((query.length >= dictionaryConfig.highlightStringMin) && (dictionaryConfig.highlightSearchQuery === true)) {\n      var context = document.getElementById(\"listToPopulate\"); // requires an element with class \"context\" to exist\n      var instance = new Mark(context);\n      instance.mark(query, dictionaryConfig.highlightingOptions); // will mark the keyword \"test\"\n    }\n\n  },\n  dictionaryConfig.searchDebounce));\n})\n\n","var dataStore = {\n  srcData: {},\n  filteredData: {}\n}","var processData = (function () {\n  \n\n  /* Shared Variables\n  ========================================================================== */\n  var gc = dictionaryConfig\n\n  \n  /* Private functions\n  ========================================================================== */\n\n  /**\n   * Returns an html string with entry-specific content\n   * @param obj // Must contain a title and a definitions array\n   * @returns {String}\n   */\n  var itemTemplate = function (obj, query) {\n  \n    var titleMarkup = function () {\n      var title = obj[gc.keyAliases.title]\n      var id = title.split(' ').join('-')\n      return '<' + dictionaryConfig.itemTitleTagType + ' id=\"' + id + '\" class=\"' + dictionaryConfig.itemTitleClass + '\">' + title + ' </' + dictionaryConfig.itemTitleTagType +'>'\n    }\n    var definitonsMarkup = function () {\n      var text = ''\n      var defs = obj[gc.keyAliases.definitions]\n\n      for (var i = 0; i < defs.length; i++) {\n        var def = defs[i]\n        def = processDefinition(def, obj[gc.keyAliases.links], query)\n\n        var x = '<' + dictionaryConfig.itemDefinitionTagType + ' class=\"'+ dictionaryConfig.itemDefinitionClass + '\">' + def + '</' + dictionaryConfig.itemDefinitionTagType + '>'\n\n        if ((i + 1) < defs.length) {\n          x +=  '<div class=\"' + dictionaryConfig.definitionDividerClass + '\">Or :</div>'\n        }\n\n        text += x\n      }\n      return text\n    }\n\n    var template = '' + titleMarkup() + definitonsMarkup()\n    \n    return template\n  }\n\n\n  /**\n   * Clear whatever elements are already rendered\n   */\n  var clear = function () {\n    $('.' + dictionaryConfig.searchListTargetClass).empty();\n  }\n\n  /**\n   * Returns an html string with entry-specific content\n   * @param definitions // An array of definition strings\n   * @param links // An array of objects including link and title attributes\n   * @returns {String}\n   */\n  var processDefinition = function (definition, links, query) {\n    var linkStart = dictionaryConfig.linkStart\n    var linkEnd = dictionaryConfig.linkEnd\n    var queryInLink = false;\n\n    if (query === undefined) {\n      queryInLink = true\n    }\n    else if (query.length < gc.highlightCharacterMin) {\n      queryInLink = true\n    }\n    else if (links !== undefined) {\n      for (var j = 0; j < links.length; j++) {\n        if (definition.toUpperCase().indexOf(query.toUpperCase()) < links[j].link.toUpperCase().indexOf(query.toUpperCase())) {\n          queryInLink = false;\n        }\n        else if (links[j].link.toUpperCase().indexOf(query.toUpperCase()) !== -1 ) {\n          queryInLink = true;\n        }\n      }\n    }\n   \n    if (links !== undefined) {\n      for (var j = 0; j < links.length; j++) {\n        var currentLink = links[j]\n\n        var linkMatch = linkStart + currentLink.title + linkEnd\n        var htmlString = htmlString = '<a href=\"' + currentLink.link + '\" class=\"' + dictionaryConfig.itemLinkClass+ '\">' + currentLink.title + '</a>'\n        definition = definition.replace(linkMatch, htmlString)\n        \n      }\n\n      definition = definition.replace(linkStart, '').replace(linkEnd, '');\n    }\n\n    return definition\n  }\n  \n\n  \n  \n  /* Public functions\n  ========================================================================== */\n\n    /**\n   * Returns an array of objects filtered by the first letter of the title\n   * @param letter // Data to filter\n   * @param query // Letter to filter by\n   * @returns {Array}\n   */\n  var filterByFirstLetter = function (data, query) {\n    var array = []\n    var run = true\n    var queryUpperCase = query.toUpperCase()\n\n    data.filter(function (obj) {\n      \n      var testArray = [obj[gc.keyAliases.title]]\n\n      var run = true\n      for (var z = 0; z < testArray.length; z++) {\n        if (run === true) {\n          var objUpperCase = testArray[z].toUpperCase();\n\n          // ...and look for index (0 returned if no index found)\n          if (objUpperCase.indexOf(queryUpperCase) === 0) {\n            // If found then push the original object\n            array.push(obj)\n            run = false\n          }\n        }\n      }\n\n    })\n    \n    if (array.length > 0) {\n      return array\n    } else {\n      return false\n    }\n  }\n\n  /**\n   * Returns an array of objects filtered by a string query\n   * @param data // Data to filter\n   * @param query // String to filter by\n   * @returns {Array}\n   */\n  var filterByString = function (data, query) {\n    var array = []\n    var run = true\n    var testQuery = query.toUpperCase()\n    \n    dictionaryConfig.searchDefinitions = document.getElementById('searchOnDefinition').checked\n\n    data.filter(function (obj) {\n      \n      var testArray = [obj[gc.keyAliases.title]]\n\n      // If the config says to search definitions...\n      if (dictionaryConfig.searchDefinitions === true) {\n        // If it's an array...\n        var key = obj[gc.keyAliases.definitions]\n        // if ( Object.prototype.toString.call( key ) === '[object Array]' ) {\n        // Push each defintion to the testArray...\n        for (var y = 0; y < key.length; y++) {\n          testArray.push(key[y])\n        }\n      }\n\n      var run = true\n      for (var z = 0; z < testArray.length; z++) {\n        if (run === true) {\n          var testObj = testArray[z].toUpperCase();\n\n          // ...and look for index (-1 returned if no index found)\n          if (testObj.indexOf(testQuery) !== -1) {\n            // If found then push the original object\n            array.push(obj)\n            run = false\n          }\n        }\n      }\n\n    })\n    \n    if (array.length > 0) {\n      return array\n    } else {\n      return false\n    }\n  }\n\n\n  /**\n   * Renders the given data in the DOM ( via itemTemplate() )\n   * @param data // Data to display\n   */\n  var showResults = function (data, query, callback) {\n    // Clear previous list\n    clear();\n    \n    for (i = 0; i < data.length; i++) {\n      var obj = data[i]\n      // Generate templates for each requested data object\n      var template = itemTemplate(obj, query)\n      // Append templates to DOM node as specified in config\n      $('.' + dictionaryConfig.searchListTargetClass).append(template)\n    }\n\n    var Anchors = document.getElementsByTagName(\"a\");\n    \n      for (var i = 0; i < Anchors.length ; i++) {\n        Anchors[i].addEventListener(\"click\", function (event) {\n          var t = event.target\n          if (t.hash) {\n            event.preventDefault();\n            location.hash = ''\n            processData.showResults(dataStore.srcData, '', function () {\n              var element = document.getElementById(t.hash.substring(1, t.hash.length))\n              var scrollTo = utils.getCoords(element).top\n              window.scrollTo(0, scrollTo)\n            })\n            $('.' + dictionaryConfig.searchInputTargetClass)[0].value = '';\n          }\n        },\n        false);\n      }\n    \n    if (callback !== undefined) {\n      callback();\n    }\n  }\n\n   \n  /**\n   * Return the functions we wish to make public (see public functions above)\n   */\n  return {\n    filterDataByString: filterByString,\n    showResults: showResults,\n    filterByFirstLetter: filterByFirstLetter,\n  }\n\n})();","/**\n * Scoped so as not to pollute global namespace\n */\nvar utils = {\n  getCoords: function (elem) { // crossbrowser version\n    var box = elem.getBoundingClientRect();\n\n    var body = document.body;\n    var docEl = document.documentElement;\n\n    var scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;\n    var scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;\n\n    var clientTop = docEl.clientTop || body.clientTop || 0;\n    var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n\n    var top  = box.top +  scrollTop - clientTop;\n    var left = box.left + scrollLeft - clientLeft;\n\n    return { top: Math.round(top), left: Math.round(left) };\n  },\n\n  /**\n   * fetches a json file from the specified path and executes callback\n   * @param path\n   * @param callback\n   */\n  fetchJSONFile: function (path, callback) {\n    var httpRequest = new XMLHttpRequest();\n    httpRequest.onreadystatechange = function() {\n        if (httpRequest.readyState === 4) {\n            if (httpRequest.status === 200) {\n                var data = JSON.parse(httpRequest.responseText);\n                if (callback) callback(data);\n            }\n        }\n    };\n    httpRequest.open('GET', path);\n    httpRequest.send(); \n  },\n  /**\n   * flattens the specified array (removes nesting)\n   * @param array\n   */\n  flattenArray: function (array) {\n      var result = {};\n      function recurse (cur, prop) {\n          if (Object(cur) !== cur) {\n              result[prop] = cur;\n          } else if (Array.isArray(cur)) {\n               for(var i=0, l=cur.length; i<l; i++)\n                   recurse(cur[i], prop + \"[\" + i + \"]\");\n              if (l == 0)\n                  result[prop] = [];\n          } else {\n              var isEmpty = true;\n              for (var p in cur) {\n                  isEmpty = false;\n                  recurse(cur[p], prop ? prop+\".\"+p : p);\n              }\n              if (isEmpty && prop)\n                  result[prop] = {};\n          }\n      }\n      recurse(array, \"\");\n      return result;  \n  },\n  searchArray: function (key, array){\n    for (var i=0; i < array.length; i++) {\n      if (array[i].name === key) {\n        return array[i];\n      }\n    }\n  },\n  /**\n   * debouncing, executes the function if there was no new event in $wait milliseconds\n   * @param func\n   * @param wait\n   * @param scope\n   * @returns {Function}\n   */\n  debounce: function(func, wait, scope) {\n    var timeout;\n    return function() {\n      var context = scope || this, args = arguments;\n      var later = function() {\n        timeout = null;\n        func.apply(context, args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  },\n\n  /**\n   * In case of a \"storm of events\", this executes once every $threshold\n   * @param fn\n   * @param threshold\n   * @param scope\n   * @returns {Function}\n   */\n  throttle: function(fn, threshold, scope) {\n    threshold || (threshold = 250);\n    var last, deferTimer;\n\n    return function() {\n      var context = scope || this;\n      var now = +new Date, args = arguments;\n\n      if (last && now < last + threshold) {\n        // Hold on to it\n        clearTimeout(deferTimer);\n        deferTimer = setTimeout(function() {\n          last = now;\n          fn.apply(context, args);\n        }, threshold);\n      } else {\n        last = now;\n        fn.apply(context, args);\n      }\n    };\n  }\n};\n","/*!***************************************************\n* mark.js v8.11.1\n* https://markjs.io/\n* Copyright (c) 2014–2018, Julian Kühnel\n* Released under the MIT license https://git.io/vwTVl\n*****************************************************/\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):e.Mark=t()}(this,function(){\"use strict\";var e=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},t=function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")},n=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i=function(){function e(n){var r=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5e3;t(this,e),this.ctx=n,this.iframes=r,this.exclude=i,this.iframesTimeout=o}return n(e,[{key:\"getContexts\",value:function(){var e=[];return(void 0!==this.ctx&&this.ctx?NodeList.prototype.isPrototypeOf(this.ctx)?Array.prototype.slice.call(this.ctx):Array.isArray(this.ctx)?this.ctx:\"string\"==typeof this.ctx?Array.prototype.slice.call(document.querySelectorAll(this.ctx)):[this.ctx]:[]).forEach(function(t){var n=e.filter(function(e){return e.contains(t)}).length>0;-1!==e.indexOf(t)||n||e.push(t)}),e}},{key:\"getIframeContents\",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){},r=void 0;try{var i=e.contentWindow;if(r=i.document,!i||!r)throw new Error(\"iframe inaccessible\")}catch(e){n()}r&&t(r)}},{key:\"isIframeBlank\",value:function(e){var t=e.getAttribute(\"src\").trim();return\"about:blank\"===e.contentWindow.location.href&&\"about:blank\"!==t&&t}},{key:\"observeIframeLoad\",value:function(e,t,n){var r=this,i=!1,o=null,a=function a(){if(!i){i=!0,clearTimeout(o);try{r.isIframeBlank(e)||(e.removeEventListener(\"load\",a),r.getIframeContents(e,t,n))}catch(e){n()}}};e.addEventListener(\"load\",a),o=setTimeout(a,this.iframesTimeout)}},{key:\"onIframeReady\",value:function(e,t,n){try{\"complete\"===e.contentWindow.document.readyState?this.isIframeBlank(e)?this.observeIframeLoad(e,t,n):this.getIframeContents(e,t,n):this.observeIframeLoad(e,t,n)}catch(e){n()}}},{key:\"waitForIframes\",value:function(e,t){var n=this,r=0;this.forEachIframe(e,function(){return!0},function(e){r++,n.waitForIframes(e.querySelector(\"html\"),function(){--r||t()})},function(e){e||t()})}},{key:\"forEachIframe\",value:function(t,n,r){var i=this,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:function(){},a=t.querySelectorAll(\"iframe\"),s=a.length,c=0;a=Array.prototype.slice.call(a);var u=function(){--s<=0&&o(c)};s||u(),a.forEach(function(t){e.matches(t,i.exclude)?u():i.onIframeReady(t,function(e){n(t)&&(c++,r(e)),u()},u)})}},{key:\"createIterator\",value:function(e,t,n){return document.createNodeIterator(e,t,n,!1)}},{key:\"createInstanceOnIframe\",value:function(t){return new e(t.querySelector(\"html\"),this.iframes)}},{key:\"compareNodeIframe\",value:function(e,t,n){if(e.compareDocumentPosition(n)&Node.DOCUMENT_POSITION_PRECEDING){if(null===t)return!0;if(t.compareDocumentPosition(n)&Node.DOCUMENT_POSITION_FOLLOWING)return!0}return!1}},{key:\"getIteratorNode\",value:function(e){var t=e.previousNode();return{prevNode:t,node:null===t?e.nextNode():e.nextNode()&&e.nextNode()}}},{key:\"checkIframeFilter\",value:function(e,t,n,r){var i=!1,o=!1;return r.forEach(function(e,t){e.val===n&&(i=t,o=e.handled)}),this.compareNodeIframe(e,t,n)?(!1!==i||o?!1===i||o||(r[i].handled=!0):r.push({val:n,handled:!0}),!0):(!1===i&&r.push({val:n,handled:!1}),!1)}},{key:\"handleOpenIframes\",value:function(e,t,n,r){var i=this;e.forEach(function(e){e.handled||i.getIframeContents(e.val,function(e){i.createInstanceOnIframe(e).forEachNode(t,n,r)})})}},{key:\"iterateThroughNodes\",value:function(e,t,n,r,i){for(var o,a=this,s=this.createIterator(t,e,r),c=[],u=[],l=void 0,h=void 0;void 0,o=a.getIteratorNode(s),h=o.prevNode,l=o.node;)this.iframes&&this.forEachIframe(t,function(e){return a.checkIframeFilter(l,h,e,c)},function(t){a.createInstanceOnIframe(t).forEachNode(e,function(e){return u.push(e)},r)}),u.push(l);u.forEach(function(e){n(e)}),this.iframes&&this.handleOpenIframes(c,e,n,r),i()}},{key:\"forEachNode\",value:function(e,t,n){var r=this,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:function(){},o=this.getContexts(),a=o.length;a||i(),o.forEach(function(o){var s=function(){r.iterateThroughNodes(e,o,t,n,function(){--a<=0&&i()})};r.iframes?r.waitForIframes(o,s):s()})}}],[{key:\"matches\",value:function(e,t){var n=\"string\"==typeof t?[t]:t,r=e.matches||e.matchesSelector||e.msMatchesSelector||e.mozMatchesSelector||e.oMatchesSelector||e.webkitMatchesSelector;if(r){var i=!1;return n.every(function(t){return!r.call(e,t)||(i=!0,!1)}),i}return!1}}]),e}(),o=function(){function o(e){t(this,o),this.ctx=e,this.ie=!1;var n=window.navigator.userAgent;(n.indexOf(\"MSIE\")>-1||n.indexOf(\"Trident\")>-1)&&(this.ie=!0)}return n(o,[{key:\"log\",value:function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"debug\",r=this.opt.log;this.opt.debug&&\"object\"===(void 0===r?\"undefined\":e(r))&&\"function\"==typeof r[n]&&r[n](\"mark.js: \"+t)}},{key:\"escapeStr\",value:function(e){return e.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\"\\\\$&\")}},{key:\"createRegExp\",value:function(e){return\"disabled\"!==this.opt.wildcards&&(e=this.setupWildcardsRegExp(e)),e=this.escapeStr(e),Object.keys(this.opt.synonyms).length&&(e=this.createSynonymsRegExp(e)),(this.opt.ignoreJoiners||this.opt.ignorePunctuation.length)&&(e=this.setupIgnoreJoinersRegExp(e)),this.opt.diacritics&&(e=this.createDiacriticsRegExp(e)),e=this.createMergedBlanksRegExp(e),(this.opt.ignoreJoiners||this.opt.ignorePunctuation.length)&&(e=this.createJoinersRegExp(e)),\"disabled\"!==this.opt.wildcards&&(e=this.createWildcardsRegExp(e)),e=this.createAccuracyRegExp(e)}},{key:\"createSynonymsRegExp\",value:function(e){var t=this.opt.synonyms,n=this.opt.caseSensitive?\"\":\"i\",r=this.opt.ignoreJoiners||this.opt.ignorePunctuation.length?\"\\0\":\"\";for(var i in t)if(t.hasOwnProperty(i)){var o=t[i],a=\"disabled\"!==this.opt.wildcards?this.setupWildcardsRegExp(i):this.escapeStr(i),s=\"disabled\"!==this.opt.wildcards?this.setupWildcardsRegExp(o):this.escapeStr(o);\"\"!==a&&\"\"!==s&&(e=e.replace(new RegExp(\"(\"+this.escapeStr(a)+\"|\"+this.escapeStr(s)+\")\",\"gm\"+n),r+\"(\"+this.processSynomyms(a)+\"|\"+this.processSynomyms(s)+\")\"+r))}return e}},{key:\"processSynomyms\",value:function(e){return(this.opt.ignoreJoiners||this.opt.ignorePunctuation.length)&&(e=this.setupIgnoreJoinersRegExp(e)),e}},{key:\"setupWildcardsRegExp\",value:function(e){return(e=e.replace(/(?:\\\\)*\\?/g,function(e){return\"\\\\\"===e.charAt(0)?\"?\":\"\u0001\"})).replace(/(?:\\\\)*\\*/g,function(e){return\"\\\\\"===e.charAt(0)?\"*\":\"\u0002\"})}},{key:\"createWildcardsRegExp\",value:function(e){var t=\"withSpaces\"===this.opt.wildcards;return e.replace(/\\u0001/g,t?\"[\\\\S\\\\s]?\":\"\\\\S?\").replace(/\\u0002/g,t?\"[\\\\S\\\\s]*?\":\"\\\\S*\")}},{key:\"setupIgnoreJoinersRegExp\",value:function(e){return e.replace(/[^(|)\\\\]/g,function(e,t,n){var r=n.charAt(t+1);return/[(|)\\\\]/.test(r)||\"\"===r?e:e+\"\\0\"})}},{key:\"createJoinersRegExp\",value:function(e){var t=[],n=this.opt.ignorePunctuation;return Array.isArray(n)&&n.length&&t.push(this.escapeStr(n.join(\"\"))),this.opt.ignoreJoiners&&t.push(\"\\\\u00ad\\\\u200b\\\\u200c\\\\u200d\"),t.length?e.split(/\\u0000+/).join(\"[\"+t.join(\"\")+\"]*\"):e}},{key:\"createDiacriticsRegExp\",value:function(e){var t=this.opt.caseSensitive?\"\":\"i\",n=this.opt.caseSensitive?[\"aàáảãạăằắẳẵặâầấẩẫậäåāą\",\"AÀÁẢÃẠĂẰẮẲẴẶÂẦẤẨẪẬÄÅĀĄ\",\"cçćč\",\"CÇĆČ\",\"dđď\",\"DĐĎ\",\"eèéẻẽẹêềếểễệëěēę\",\"EÈÉẺẼẸÊỀẾỂỄỆËĚĒĘ\",\"iìíỉĩịîïī\",\"IÌÍỈĨỊÎÏĪ\",\"lł\",\"LŁ\",\"nñňń\",\"NÑŇŃ\",\"oòóỏõọôồốổỗộơởỡớờợöøō\",\"OÒÓỎÕỌÔỒỐỔỖỘƠỞỠỚỜỢÖØŌ\",\"rř\",\"RŘ\",\"sšśșş\",\"SŠŚȘŞ\",\"tťțţ\",\"TŤȚŢ\",\"uùúủũụưừứửữựûüůū\",\"UÙÚỦŨỤƯỪỨỬỮỰÛÜŮŪ\",\"yýỳỷỹỵÿ\",\"YÝỲỶỸỴŸ\",\"zžżź\",\"ZŽŻŹ\"]:[\"aàáảãạăằắẳẵặâầấẩẫậäåāąAÀÁẢÃẠĂẰẮẲẴẶÂẦẤẨẪẬÄÅĀĄ\",\"cçćčCÇĆČ\",\"dđďDĐĎ\",\"eèéẻẽẹêềếểễệëěēęEÈÉẺẼẸÊỀẾỂỄỆËĚĒĘ\",\"iìíỉĩịîïīIÌÍỈĨỊÎÏĪ\",\"lłLŁ\",\"nñňńNÑŇŃ\",\"oòóỏõọôồốổỗộơởỡớờợöøōOÒÓỎÕỌÔỒỐỔỖỘƠỞỠỚỜỢÖØŌ\",\"rřRŘ\",\"sšśșşSŠŚȘŞ\",\"tťțţTŤȚŢ\",\"uùúủũụưừứửữựûüůūUÙÚỦŨỤƯỪỨỬỮỰÛÜŮŪ\",\"yýỳỷỹỵÿYÝỲỶỸỴŸ\",\"zžżźZŽŻŹ\"],r=[];return e.split(\"\").forEach(function(i){n.every(function(n){if(-1!==n.indexOf(i)){if(r.indexOf(n)>-1)return!1;e=e.replace(new RegExp(\"[\"+n+\"]\",\"gm\"+t),\"[\"+n+\"]\"),r.push(n)}return!0})}),e}},{key:\"createMergedBlanksRegExp\",value:function(e){return e.replace(/[\\s]+/gim,\"[\\\\s]+\")}},{key:\"createAccuracyRegExp\",value:function(e){var t=this,n=this.opt.accuracy,r=\"string\"==typeof n?n:n.value,i=\"\";switch((\"string\"==typeof n?[]:n.limiters).forEach(function(e){i+=\"|\"+t.escapeStr(e)}),r){case\"partially\":default:return\"()(\"+e+\")\";case\"complementary\":return\"()([^\"+(i=\"\\\\s\"+(i||this.escapeStr(\"!\\\"#$%&'()*+,-./:;<=>?@[\\\\]^_`{|}~¡¿\")))+\"]*\"+e+\"[^\"+i+\"]*)\";case\"exactly\":return\"(^|\\\\s\"+i+\")(\"+e+\")(?=$|\\\\s\"+i+\")\"}}},{key:\"getSeparatedKeywords\",value:function(e){var t=this,n=[];return e.forEach(function(e){t.opt.separateWordSearch?e.split(\" \").forEach(function(e){e.trim()&&-1===n.indexOf(e)&&n.push(e)}):e.trim()&&-1===n.indexOf(e)&&n.push(e)}),{keywords:n.sort(function(e,t){return t.length-e.length}),length:n.length}}},{key:\"isNumeric\",value:function(e){return Number(parseFloat(e))==e}},{key:\"checkRanges\",value:function(e){var t=this;if(!Array.isArray(e)||\"[object Object]\"!==Object.prototype.toString.call(e[0]))return this.log(\"markRanges() will only accept an array of objects\"),this.opt.noMatch(e),[];var n=[],r=0;return e.sort(function(e,t){return e.start-t.start}).forEach(function(e){var i=t.callNoMatchOnInvalidRanges(e,r),o=i.start,a=i.end;i.valid&&(e.start=o,e.length=a-o,n.push(e),r=a)}),n}},{key:\"callNoMatchOnInvalidRanges\",value:function(e,t){var n=void 0,r=void 0,i=!1;return e&&void 0!==e.start?(r=(n=parseInt(e.start,10))+parseInt(e.length,10),this.isNumeric(e.start)&&this.isNumeric(e.length)&&r-t>0&&r-n>0?i=!0:(this.log(\"Ignoring invalid or overlapping range: \"+JSON.stringify(e)),this.opt.noMatch(e))):(this.log(\"Ignoring invalid range: \"+JSON.stringify(e)),this.opt.noMatch(e)),{start:n,end:r,valid:i}}},{key:\"checkWhitespaceRanges\",value:function(e,t,n){var r=void 0,i=!0,o=n.length,a=t-o,s=parseInt(e.start,10)-a;return(r=(s=s>o?o:s)+parseInt(e.length,10))>o&&(r=o,this.log(\"End range automatically set to the max value of \"+o)),s<0||r-s<0||s>o||r>o?(i=!1,this.log(\"Invalid range: \"+JSON.stringify(e)),this.opt.noMatch(e)):\"\"===n.substring(s,r).replace(/\\s+/g,\"\")&&(i=!1,this.log(\"Skipping whitespace only range: \"+JSON.stringify(e)),this.opt.noMatch(e)),{start:s,end:r,valid:i}}},{key:\"getTextNodes\",value:function(e){var t=this,n=\"\",r=[];this.iterator.forEachNode(NodeFilter.SHOW_TEXT,function(e){r.push({start:n.length,end:(n+=e.textContent).length,node:e})},function(e){return t.matchesExclude(e.parentNode)?NodeFilter.FILTER_REJECT:NodeFilter.FILTER_ACCEPT},function(){e({value:n,nodes:r})})}},{key:\"matchesExclude\",value:function(e){return i.matches(e,this.opt.exclude.concat([\"script\",\"style\",\"title\",\"head\",\"html\"]))}},{key:\"wrapRangeInTextNode\",value:function(e,t,n){var r=this.opt.element?this.opt.element:\"mark\",i=e.splitText(t),o=i.splitText(n-t),a=document.createElement(r);return a.setAttribute(\"data-markjs\",\"true\"),this.opt.className&&a.setAttribute(\"class\",this.opt.className),a.textContent=i.textContent,i.parentNode.replaceChild(a,i),o}},{key:\"wrapRangeInMappedTextNode\",value:function(e,t,n,r,i){var o=this;e.nodes.every(function(a,s){var c=e.nodes[s+1];if(void 0===c||c.start>t){if(!r(a.node))return!1;var u=t-a.start,l=(n>a.end?a.end:n)-a.start,h=e.value.substr(0,a.start),f=e.value.substr(l+a.start);if(a.node=o.wrapRangeInTextNode(a.node,u,l),e.value=h+f,e.nodes.forEach(function(t,n){n>=s&&(e.nodes[n].start>0&&n!==s&&(e.nodes[n].start-=l),e.nodes[n].end-=l)}),n-=l,i(a.node.previousSibling,a.start),!(n>a.end))return!1;t=a.end}return!0})}},{key:\"wrapMatches\",value:function(e,t,n,r,i){var o=this,a=0===t?0:t+1;this.getTextNodes(function(t){t.nodes.forEach(function(t){t=t.node;for(var i=void 0;null!==(i=e.exec(t.textContent))&&\"\"!==i[a];)if(n(i[a],t)){var s=i.index;if(0!==a)for(var c=1;c<a;c++)s+=i[c].length;t=o.wrapRangeInTextNode(t,s,s+i[a].length),r(t.previousSibling),e.lastIndex=0}}),i()})}},{key:\"wrapMatchesAcrossElements\",value:function(e,t,n,r,i){var o=this,a=0===t?0:t+1;this.getTextNodes(function(t){for(var s=void 0;null!==(s=e.exec(t.value))&&\"\"!==s[a];){var c=s.index;if(0!==a)for(var u=1;u<a;u++)c+=s[u].length;var l=c+s[a].length;o.wrapRangeInMappedTextNode(t,c,l,function(e){return n(s[a],e)},function(t,n){e.lastIndex=n,r(t)})}i()})}},{key:\"wrapRangeFromIndex\",value:function(e,t,n,r){var i=this;this.getTextNodes(function(o){var a=o.value.length;e.forEach(function(e,r){var s=i.checkWhitespaceRanges(e,a,o.value),c=s.start,u=s.end;s.valid&&i.wrapRangeInMappedTextNode(o,c,u,function(n){return t(n,e,o.value.substring(c,u),r)},function(t){n(t,e)})}),r()})}},{key:\"unwrapMatches\",value:function(e){for(var t=e.parentNode,n=document.createDocumentFragment();e.firstChild;)n.appendChild(e.removeChild(e.firstChild));t.replaceChild(n,e),this.ie?this.normalizeTextNode(t):t.normalize()}},{key:\"normalizeTextNode\",value:function(e){if(e){if(3===e.nodeType)for(;e.nextSibling&&3===e.nextSibling.nodeType;)e.nodeValue+=e.nextSibling.nodeValue,e.parentNode.removeChild(e.nextSibling);else this.normalizeTextNode(e.firstChild);this.normalizeTextNode(e.nextSibling)}}},{key:\"markRegExp\",value:function(e,t){var n=this;this.opt=t,this.log('Searching with expression \"'+e+'\"');var r=0,i=\"wrapMatches\";this.opt.acrossElements&&(i=\"wrapMatchesAcrossElements\"),this[i](e,this.opt.ignoreGroups,function(e,t){return n.opt.filter(t,e,r)},function(e){r++,n.opt.each(e)},function(){0===r&&n.opt.noMatch(e),n.opt.done(r)})}},{key:\"mark\",value:function(e,t){var n=this;this.opt=t;var r=0,i=\"wrapMatches\",o=this.getSeparatedKeywords(\"string\"==typeof e?[e]:e),a=o.keywords,s=o.length,c=this.opt.caseSensitive?\"\":\"i\";this.opt.acrossElements&&(i=\"wrapMatchesAcrossElements\"),0===s?this.opt.done(r):function e(t){var o=new RegExp(n.createRegExp(t),\"gm\"+c),u=0;n.log('Searching with expression \"'+o+'\"'),n[i](o,1,function(e,i){return n.opt.filter(i,t,r,u)},function(e){u++,r++,n.opt.each(e)},function(){0===u&&n.opt.noMatch(t),a[s-1]===t?n.opt.done(r):e(a[a.indexOf(t)+1])})}(a[0])}},{key:\"markRanges\",value:function(e,t){var n=this;this.opt=t;var r=0,i=this.checkRanges(e);i&&i.length?(this.log(\"Starting to mark with the following ranges: \"+JSON.stringify(i)),this.wrapRangeFromIndex(i,function(e,t,r,i){return n.opt.filter(e,t,r,i)},function(e,t){r++,n.opt.each(e,t)},function(){n.opt.done(r)})):this.opt.done(r)}},{key:\"unmark\",value:function(e){var t=this;this.opt=e;var n=this.opt.element?this.opt.element:\"*\";n+=\"[data-markjs]\",this.opt.className&&(n+=\".\"+this.opt.className),this.log('Removal selector \"'+n+'\"'),this.iterator.forEachNode(NodeFilter.SHOW_ELEMENT,function(e){t.unwrapMatches(e)},function(e){var r=i.matches(e,n),o=t.matchesExclude(e);return!r||o?NodeFilter.FILTER_REJECT:NodeFilter.FILTER_ACCEPT},this.opt.done)}},{key:\"opt\",set:function(e){this._opt=r({},{element:\"\",className:\"\",exclude:[],iframes:!1,iframesTimeout:5e3,separateWordSearch:!0,diacritics:!0,synonyms:{},accuracy:\"partially\",acrossElements:!1,caseSensitive:!1,ignoreJoiners:!1,ignoreGroups:0,ignorePunctuation:[],wildcards:\"disabled\",each:function(){},noMatch:function(){},filter:function(){return!0},done:function(){},debug:!1,log:window.console},e)},get:function(){return this._opt}},{key:\"iterator\",get:function(){return new i(this.ctx,this.opt.iframes,this.opt.exclude,this.opt.iframesTimeout)}}]),o}();return function(e){var t=this,n=new o(e);return this.mark=function(e,r){return n.mark(e,r),t},this.markRegExp=function(e,r){return n.markRegExp(e,r),t},this.markRanges=function(e,r){return n.markRanges(e,r),t},this.unmark=function(e){return n.unmark(e),t},this}});\n"]}